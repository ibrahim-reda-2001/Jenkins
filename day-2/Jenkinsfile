pipeline {
    agent {
        docker {
            image 'ibrahimelmsery1/dockerslave'
            args '-v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    environment {
        CREDENTIALS_ID = 'mo'
        SLACK_CHANNEL = '#nti-nodejs' // Specify the Slack channel
    }
    stages {
        stage('prep') {
            steps {
                git 'https://github.com/ibrahim-reda-2001/jenkins-node_project.git'
            }
        }
        stage('ci') {
            steps {
                withCredentials([usernamePassword(credentialsId: "${CREDENTIALS_ID}", usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh """
                    docker build . -f dockerfile -t ibrahimelmsery1/iti-lab
                    echo \$PASSWORD | docker login -u \$USERNAME --password-stdin
                    docker push ibrahimelmsery1/iti-lab
                    """
                }
            }
        }
        stage('cd') {
            steps {
                sh """
                if [ \$(docker ps -a -q -f name=node-project) ]; then
                    docker rm -f node-project
                fi
                docker run -d -p 3000:3000 --name node-project ibrahimelmsery1/iti-lab
                """
            }
        }
    }
    post {
        success {
            slackSend(
                channel: "${env.SLACK_CHANNEL}",
                color: "#00FF00",
                message: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})"
            )
        }
        failure {
            slackSend(
                channel: "${env.SLACK_CHANNEL}",
                color: "#FF0000",
                message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})"
            )
        }
        cleanup {
            cleanWs()
        }
    }
}
